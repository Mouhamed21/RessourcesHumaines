<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;
/**
 * ProgrammeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProgrammeRepository extends \Doctrine\ORM\EntityRepository
{
    public function getProgrammes(\AppBundle\Entity\Formation $formation)
    {
        $qb=$this->createQueryBuilder('p')
            ->select('p.id','p.libelle','p.datedebutprogramme','p.datefinprogramme','f.id as idfor'
            )
            ->innerJoin('AppBundle:Formation', 'f', Join::WITH, 'f.id = p.formation')
            //->where('c.tag != 1')
            ->where('f.id = :formationId')
            ->setParameter('formationId', $formation->getId())
        ;

        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getProgramme(\AppBundle\Entity\Programme $programme)
    {
        $qb=$this->createQueryBuilder('p')
            ->select('p.id','p.libelle','p.datedebutprogramme','p.datefinprogramme','f.id as idfor'
            )
            ->innerJoin('AppBundle:Formation', 'f', Join::WITH, 'f.id = p.formation')
            //->where('c.tag != 1')
            ->where('p.id = :programmeId')
            ->setParameter('programmeId', $programme->getId())
        ;

        try {
            return ($qb ->getQuery()->getOneOrNullResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function TrouverProgrammes(\AppBundle\Entity\Programme $programme)
    {
        $qb=$this->createQueryBuilder('p')
        ->select('p.id','p.libelle','p.datedebutprogramme','p.datefinprogramme','f.id as idfor'
        )
        ->innerJoin('AppBundle:Formation', 'f', Join::WITH, 'f.id = p.formation')
        //->where('c.tag != 1')
        ->where('f.id = :programmeId')
        ->setParameter('programmeId', $programme->getId())
        ;

        try {
            return ($qb ->getQuery()->getSingleResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
