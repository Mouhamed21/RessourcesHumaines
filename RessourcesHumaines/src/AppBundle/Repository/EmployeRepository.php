<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;


/**
 * EmployeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeRepository extends \Doctrine\ORM\EntityRepository
{
    public function findConjoints($id)
    {
        $qb=$this->createQueryBuilder('e');
        $qb
            ->select('c')
            ->from('AppBundle:Conjoint','c')
            ->where('c.tag != 1')
            ->andWhere('c.employe = :id')
            ->setParameter('id', $id);
        return $qb;
        ;

    }
    public function getEmployes()
    {
        $qb=$this->createQueryBuilder('e');
        $qb
            ->select('e.id','e.nom','e.prenom','e.matricule','e.tag')
            ->where('e.tag != 1')
            ;
        return $qb ->getQuery()->getResult();
    }
    public function findEmployeBySexe()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbre','e.sexe','e.tag')
        ->where('e.tag !=1')
        //->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
        ->groupBy('e.sexe')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployeByHomme()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbre','e.sexe','e.tag')
        ->where('e.tag !=1')
        ->andwhere("e.sexe='Homme'")
        //->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
        //->groupBy('e.s')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmploye()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbre','e.tag')
        ->where('e.tag !=1')
  
        //->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
        //->groupBy('e.s')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployeByFemme()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbre','e.sexe','e.tag')
        ->where('e.tag !=1')
        ->andwhere("e.sexe='Femme'")
        //->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
        //->groupBy('e.s')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployeBySituationMatrimoniale()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbrmarie','e.situationMatri','e.tag')
        ->where('e.tag !=1')
        //->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
        ->groupBy('e.situationMatri')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployesByCategorie()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbrem','ce.nomcategorieemploye')
        ->innerJoin('AppBundle:CategorieEmploye', 'ce', Join::WITH, 'ce.id = e.categorieemploye')
        ->groupBy('ce.nomcategorieemploye')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployesByService()
    {
        $qb=$this->createQueryBuilder('e')
        ->select('count(e.id) as nbrser','s.nomservice')
        ->innerJoin('AppBundle:Service', 's', Join::WITH, 's.id = e.service')
        ->groupBy('s.nomservice')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getEmployees(\AppBundle\Entity\Formation $formation)
    {
        $qb=$this->createQueryBuilder('e')
        ->select('e.id','e.nom','e.prenom','e.matricule','e.tag','f.id as idfo')
            ->innerJoin('AppBundle:FormationEmploye', 'fe', Join::WITH, 'e.id = fe.employe')
            ->innerJoin('AppBundle:Formation', 'f', Join::WITH, 'fe.formation = f.id')
            //->where('fe.tag != 1')
            ->andWhere('f.id = :formationId')
            ->setParameter('formationId', $formation->getId())
        ;

        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
      
    }
   

}
