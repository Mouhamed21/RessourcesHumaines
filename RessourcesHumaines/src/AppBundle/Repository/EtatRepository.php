<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * EtatRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EtatRepository extends \Doctrine\ORM\EntityRepository
{
    public function findEtats()
    {
        $qb=$this->createQueryBuilder('es');
        $qb
            ->select('es.id','es.nometat','es.tag')
            ->where('es.tag != 1')

        ;
        return $qb ->getQuery()->getResult();
    }
    public function getEtatEmployes(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('et')
            ->innerJoin('AppBundle:EtatEmploye', 'ee', Join::WITH, 'et.id = ee.etat')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'ee.employe = e.id')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;

        try {
            return $qb ->getQuery()->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getEtats(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('et')
            ->select('et.id','et.nometat','ee.datedebutetat','ee.datefinetat','e.id as idemp','ee.id as idetemp')
            ->innerJoin('AppBundle:EtatEmploye', 'ee', Join::WITH, 'et.id = ee.etat')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'ee.employe = e.id')
            ->orderBy('ee.id', 'DESC')
            ->setMaxResults(1)
            ->where('ee.tag != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())

        ;

        try {
            return $qb ->getQuery()->getOneOrNullResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getEtat1(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('et')
            ->select('et.id','et.nometat','ee.datedebutetat','ee.datefinetat')
            ->innerJoin('AppBundle:EtatEmploye', 'ee', Join::WITH, 'et.id = ee.etat')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'ee.employe = e.id')
            ->where('ee.tag != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployeByEtat()
    {
        $qb=$this->createQueryBuilder('et')
            ->select('count(e.id) as nbretat','et.nometat')
            ->innerJoin('AppBundle:EtatEmploye', 'ee', Join::WITH, 'et.id = ee.etat')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'ee.employe = e.id')
            ->where('ee.tag != 1')
            //->andWhere('e.id = :employeId')
            //->setParameter('employeId', $employe->getId())
            ->groupBy('et.nometat')
        ;
        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
