<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;
/**
 * TypeContratRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TypeContratRepository extends \Doctrine\ORM\EntityRepository
{
    public function findContrats()
    {
        $qb=$this->createQueryBuilder('c');
        $qb
            ->select('c.id','c.nomtypecontrat','c.tag')
            ->where('c.tag != 1')
        ;
        return $qb ->getQuery()->getResult();
    }
    public function getContrat(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('t')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 't.id = e.typecontrat')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;

        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getContrats(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('t')
            ->select('t.id','t.nomtypecontrat','te.datedebutcontrat','te.datefincontrat','te.id as idtemp',
                'e.id as idemp')
            ->innerJoin('AppBundle:TypeContratEmploye', 'te', Join::WITH, 't.id = te.typecontrat')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'te.employe = e.id')
            ->orderBy('te.id', 'DESC')
            ->setMaxResults(1)
            ->where('te.tag != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;

        try {
            return $qb ->getQuery()->getOneOrNullResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getContrat1(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('t')
            ->select('t.id','t.nomtypecontrat','te.datedebutcontrat','te.datefincontrat')
            ->innerJoin('AppBundle:TypeContratEmploye', 'te', Join::WITH, 't.id = te.typecontrat')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'te.employe = e.id')
            ->where('te != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
