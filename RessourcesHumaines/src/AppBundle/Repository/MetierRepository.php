<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * MetierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MetierRepository extends \Doctrine\ORM\EntityRepository
{
    public function findMetiers()
    {
        $qb=$this->createQueryBuilder('ms');
        $qb
            ->select('ms.id','ms.nommetier','ms.tag')
            ->where('ms.tag != 1')

        ;
        return $qb ->getQuery()->getResult();
    }
    public function getMetiers(\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('m')
            ->select('m.id','m.nommetier','me.id as idmemp','e.id as idemp')
            ->innerJoin('AppBundle:MetierEmploye', 'me', Join::WITH, 'm.id = me.metier')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'me.employe = e.id')
            ->where('me.tag != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;
        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function findEmployeByMetiers()
    {
        $qb=$this->createQueryBuilder('m')
            ->select('count(e.id) as nbremp','m.nommetier')
            ->innerJoin('AppBundle:MetierEmploye', 'me', Join::WITH, 'm.id = me.metier')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'me.employe = e.id')
            ->where('me.tag != 1')
            //->andWhere('e.id = :employeId')
            //->setParameter('employeId', $employe->getId())
            ->groupBy('m.nommetier')
        ;
        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
