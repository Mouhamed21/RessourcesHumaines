<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * NationaliteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NationaliteRepository extends \Doctrine\ORM\EntityRepository
{
    public function findNationalites()
    {
        $qb=$this->createQueryBuilder('ns');
        $qb
            ->select('ns.id','ns.nomNationalite','ns.tag')
            ->where('ns.tag != 1')

        ;
        return $qb ->getQuery()->getResult();
    }
    public function getNationalites(\AppBundle\Entity\Employe $employe)
    {
       $qb=$this->createQueryBuilder('n')
           ->select('n.id','n.nomNationalite as nat','n.tag','ne.id as idnatemp','e.id as idemp')
            ->innerJoin('AppBundle:NationnaliteEmploye', 'ne', Join::WITH, 'n.id = ne.nationalite')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'ne.employe = e.id')
           ->where('ne.tag != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())
        ;

        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getNationaliteEmploye(\AppBundle\Entity\NationnaliteEmploye $nationaliteemploye,\AppBundle\Entity\Employe $employe)
    {
        $qb=$this->createQueryBuilder('n')
            ->select('n.id','n.nomNationalite as nat','n.tag','ne.id as idnatemp','e.id as idemp')
            ->innerJoin('AppBundle:NationnaliteEmploye', 'ne', Join::WITH, 'n.id = ne.nationalite')
            ->innerJoin('AppBundle:Employe', 'e', Join::WITH, 'ne.employe = e.id')
            ->andWhere('ne.id = :nationaliteemployeId','e.id = :employeId')
            ->setParameter('nationaliteemployeId', $nationaliteemploye->getId())
            ->setParameter('employeId', $employe->getId())

        ;

        try {
            return ($qb ->getQuery()->getResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }

}
