<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;
use Symfony\Component\Validator\Constraints\DateTime;
/**
 * FormationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FormationRepository extends \Doctrine\ORM\EntityRepository
{
    public function findFormations()
    {
        $qb=$this->createQueryBuilder('f')
            ->select('f.id','f.nomFormation','f.datedebutformation','f.datefinformation','f.lieuFomation','tf.nomtypeformation','ef.nometatformation')
            ->innerJoin('AppBundle:TypeFormation', 'tf', Join::WITH, 'tf.id = f.typeformation')
            ->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
           /* ->where('c.tag != 1')
            ->andWhere('e.id = :employeId')
            ->setParameter('employeId', $employe->getId())*/
        ;
        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    
    public function getFormations(\AppBundle\Entity\Formation $formation)
    {
        $qb=$this->createQueryBuilder('f')
        ->select('f.id','f.nomFormation','f.datedebutformation','f.datefinformation','f.lieuFomation','tf.nomtypeformation','ef.nometatformation')
        ->innerJoin('AppBundle:TypeFormation', 'tf', Join::WITH, 'tf.id = f.typeformation')
        ->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
           //->where('c.tag != 1')
        ->where('f.id = :formationId')
        ->setParameter('formationId', $formation->getId())
        ;

        try {
            return $qb ->getQuery()->getSingleResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getFormationsStats()
    {
        $qb=$this->createQueryBuilder('f')
        ->select('count(f.id) as nbrfor','tf.nomtypeformation')
        ->innerJoin('AppBundle:TypeFormation', 'tf', Join::WITH, 'tf.id = f.typeformation')
        ->groupBy('tf.nomtypeformation')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getFormationsStatsetat()
    {
        $qb=$this->createQueryBuilder('f')
        ->select('count(f.id) as nbretat','ef.nometatformation')
        ->innerJoin('AppBundle:EtatFormation', 'ef', Join::WITH, 'ef.id = f.etatformation')
        ->groupBy('ef.nometatformation')
        
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getFormationsStatslieu()
    {
        $qb=$this->createQueryBuilder('f')
        ->select('count(f.id) as nbrlieu','f.lieuFomation')
        ->groupBy('f.lieuFomation')
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function getFormationsStatsdate()
    {
        //$query= new \DateTime('now'); 
        //$test=$query->format('Y');
        //var_dump($test);die;
        $qb=$this->createQueryBuilder('f')
        ->select('count(f.id) as nbrmois','SUBSTRING(f.datedebutformation,1,4) as annee',
        "Case
         WHEN  SUBSTRING(f.datedebutformation,6,2)=01  THEN 'Janvier'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=02  THEN 'Fevrier'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=03  THEN 'Mars'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=04  THEN 'Avril'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=05  THEN 'Mai' 
         WHEN  SUBSTRING(f.datedebutformation,6,2)=06  THEN 'Juin'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=07  THEN 'Juillet' 
         WHEN  SUBSTRING(f.datedebutformation,6,2)=08  THEN 'AoÃ»t'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=09  THEN 'Septembre'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=10  THEN 'Octobre'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=11  THEN 'Novembre'
         WHEN  SUBSTRING(f.datedebutformation,6,2)=12  THEN 'Decembre' 
         ELSE 'autre' END as mois")
        ->groupBy('annee','mois')
        ->orderBy('SUBSTRING(f.datedebutformation,6,2)')
        //->where('annee =: test ')
        //->setParameter('test', $test)
        ;

        try {
            return $qb ->getQuery()->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
    public function TrouverFormations(\AppBundle\Entity\Programme $programme)
    {
        $qb=$this->createQueryBuilder('f')
            ->select('f.id as idfor','f.nomFormation','p.id')
            ->innerJoin('AppBundle:Programme', 'p', Join::WITH, 'f.id = p.formation')
            //->where('c.tag != 1')
            ->where('f.id = :programmeId')
            ->setParameter('programmeId', $programme->getId())
        ;

        try {
            return ($qb ->getQuery()->getSingleResult());
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
